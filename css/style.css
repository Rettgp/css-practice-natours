/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit /* box-sizing is not default inherited */
}

html {
    /* 
        Root font sizes are set in the html selector.
        For accessibility don't set absolute pixel sizes. It overrides user specified values.
        User-agent is 16px, but we want 10px so setting a percentage gets that AND preserves user specified values
    */
    font-size: 62.5%;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    line-height: 1.7;
    color: #777;
    padding: 3rem;

    box-sizing: border-box
}

.header {
    height: 95vh;
    background-image: linear-gradient(
        to right bottom, 
        rgba(126, 213, 111, 0.8), 
        rgba(40, 180, 131, 0.8)), 
        url(../img/hero.jpg);
    background-size: cover; /* Scales to be the smallest size possible preserving aspect ratio */
    background-position: top; /* Ensures that the top of the background is always at the top */
    position: relative; /* Sets the origin to which children elements position themselves*/
    clip-path: polygon(0 0, 100% 0, 100% 75%, 0% 100%);
}

.header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.header__logo {
    height: 3.5rem;
}

.header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%); /* Transform for centering */
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;

    /* Supposedly fixes shakiness of animations at the end */
    backface-visibility: hidden;
    margin-bottom: 6rem;
}

.heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation: moveInLeft 1s ease-in;

    /* 
    Delay animation
    animation-delay: 1s;

    Repeating an animation
    animation-iteration-count: 3;
    */
}

.heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;

    animation: moveInRight 1s ease-out;
}

/*The :link,:visited are pseudo classes specifically for anchor elements*/
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s; /* Must be on initial state */
    position: relative;
    font-size: 1.6rem
}
.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0,0,0,0.2);
}
.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba(0,0,0,0.2);
}
.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}
.btn:hover::after {
    transform: scaleX(1.25) scaleY(1.3);
    opacity: 0;
}

.btn--white {
    background-color: #fff;
    color:#777;
}
.btn--white::after {
    background-color: #fff;
}

.btn--animated {
    animation: moveInUp 1s ease-out .75s;
    animation-fill-mode: backwards;
}

/*
opacity and transform are the only 
properties we should animate since they
are optimized in browsers
*/
@keyframes moveInLeft{
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0); /* Returns to original transform */
    }
}

@keyframes moveInRight{
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0); /* Returns to original transform */
    }
}

@keyframes moveInUp{
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    100% {
        opacity: 1;
        transform: translate(0); /* Returns to original transform */
    }
}